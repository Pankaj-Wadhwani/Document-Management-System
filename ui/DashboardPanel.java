
import database.ProfessorDatabase;
import database.SubjectDatabase;
import database.DocumentDatabase;
import database.SemesterDatabase;
import database.CourseDatabase;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.ComponentOrientation;
import java.sql.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author amin11
 */
public class DashboardPanel extends javax.swing.JPanel {

    /**
     * Creates new form DashboardPanel
     */
    
    Semester sem;
    Course c;
    Professor p;
    Subject s;
    CourseDatabase courseDatabase;
    SemesterDatabase semesterDatabase;
    ProfessorDatabase professorDatabase;
    SubjectDatabase subjectDatabase;
    DocumentDatabase documentDatabase;
    Tbl1 tbl1=new Tbl1();
    TblReIssue tblReIssue=new TblReIssue();
    JTable jtbDocuments;
    JTable jtblReIssue;
    
    public DashboardPanel() {
        initComponents();
        jtbDocuments=tbl1.getTable();
        
        jtblReIssue=tblReIssue.getTable();
        jTabbedPane1.add(tbl1);
        jTabbedPane1.add(tblReIssue);
        btnSubmit1.setEnabled(false);
        btnReIssue.setEnabled(false);
        CustomJTable.insertInJtable(jtbDocuments,"document");
        CustomJTable.insertInJtable(jtblReIssue,"reissue");
        setSize(1180,713);
        jTabbedPane1.setTitleAt(0, "Submitted");
        jTabbedPane1.setTitleAt(1, "Re-issued");
        //this.setLocationRelativeTo(null);
          //initializing database objects
        
        
        //initializing normal objects
        c=new Course();
        sem = new Semester();
        s=new Subject(c.getCourseDatabase(),sem.getSemesterDatabase());
        p=new Professor(c.getCourseDatabase(),sem.getSemesterDatabase(),s.getSubjectDatabase());
       
        semesterDatabase=sem.getSemesterDatabase();
        courseDatabase=c.getCourseDatabase();
        professorDatabase=p.getProfessorDatabase();
        subjectDatabase=s.getSubjectDatabase();
        
        
        jtpMain.add("Course",c);
        jtpMain.add("Proffesor", p);
        jtpMain.add("Subject",s);
        constructor=true;
        
        addCourseInJCBCourse();
        addSemInJCBSem();
        addProfessorInJCBProf();
        addSubjectInJCBSubject();
        
        
        documentDatabase=new DocumentDatabase();
                
    }
    public void addSubjectInJCBSubject(){
        if(cSelected && semSelected && profSelected && constructor){
            jcbSubject.removeAllItems();
            /*
            System.out.println(jcbCourseName.getSelectedItem().toString() + ":");
            System.out.println(Integer.parseInt(jcbSem.getSelectedItem().toString()));
            System.out.println(jcbSubject.getSelectedItem().toString()+":");*/
            Vector<String> subjects=subjectDatabase.getSubjects((String)jcbCourseName.getSelectedItem(),Integer.parseInt((String)jcbSem.getSelectedItem()),professorDatabase.getSubjectIds((String)jcbProf.getSelectedItem()));
            for(int i=0;i<subjects.size();i++){
               jcbSubject.addItem(subjects.get(i));
           }
        }
    }
    public void addProfessorInJCBProf(){
        if(cSelected && semSelected ){
            jcbProf.removeAllItems();
            Vector<String> temp=new Vector();
            Vector<String> prof=professorDatabase.getProfessors(professorDatabase.getPIDsfromTeaches(subjectDatabase.getSubjectIDs((String)jcbCourseName.getSelectedItem(),Integer.parseInt((String)jcbSem.getSelectedItem()))));
            for (String professor : prof) {
                if(!temp.contains(professor))
                {
                    temp.add(professor);
         
                    jcbProf.addItem(professor);
         
                }
            }
        }     
    }
    public void addCourseInJCBCourse(){
        jcbCourseName.removeAllItems();
        
        String courses[]=courseDatabase.getAllCourses();
        System.out.println("courses:"+courses);
        for (String course : courses) {
            jcbCourseName.addItem(course);
        }
    }
    public void addSemInJCBSem(){
        jcbSem.removeAllItems();
        int sems[]=semesterDatabase.getSems();
        for(int i=0;i<sems.length;i++){
            jcbSem.addItem(sems[i]+"");
            System.out.println(sems[i]);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jtpMain = new javax.swing.JTabbedPane();
        lblCourse = new javax.swing.JLabel();
        jcbCourseName = new javax.swing.JComboBox<>();
        lblSem = new javax.swing.JLabel();
        jcbSem = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jcbProf = new javax.swing.JComboBox<>();
        lblSubject = new javax.swing.JLabel();
        jcbSubject = new javax.swing.JComboBox<>();
        pnlTable = new javax.swing.JPanel();
        pnlReIssue = new javax.swing.JPanel();
        ReDOI = new javax.swing.JLabel();
        ReDOR = new javax.swing.JLabel();
        ReDocumentName = new javax.swing.JLabel();
        ReJdcDOI = new com.toedter.calendar.JDateChooser();
        ReJdcDOR = new com.toedter.calendar.JDateChooser();
        jcbReDocName = new javax.swing.JComboBox<>();
        pnlDocumentDetails = new javax.swing.JPanel();
        txtComment = new javax.swing.JTextField();
        lblDocumentName = new javax.swing.JLabel();
        lblDOS = new javax.swing.JLabel();
        lblComment = new javax.swing.JLabel();
        jdcDOS = new com.toedter.calendar.JDateChooser();
        jcbDocName = new javax.swing.JComboBox<>();
        lblTitle = new javax.swing.JLabel();
        btnReIssue = new javax.swing.JButton();
        btnSubmit1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();

        setBackground(new java.awt.Color(0, 0, 0));

        jPanel1.setBackground(new java.awt.Color(26, 27, 65));
        jPanel1.setForeground(new java.awt.Color(187, 190, 100));

        jtpMain.setBackground(new java.awt.Color(244, 91, 105));
        jtpMain.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblCourse.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCourse.setForeground(new java.awt.Color(247, 212, 136));
        lblCourse.setText("Course");

        jcbCourseName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCourseNameActionPerformed(evt);
            }
        });

        lblSem.setBackground(new java.awt.Color(26, 27, 65));
        lblSem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblSem.setForeground(new java.awt.Color(247, 212, 136));
        lblSem.setText("Semester");

        jcbSem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbSemActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(26, 27, 65));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(247, 212, 136));
        jLabel1.setText("Professor");

        jcbProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbProfActionPerformed(evt);
            }
        });

        lblSubject.setBackground(new java.awt.Color(26, 27, 65));
        lblSubject.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblSubject.setForeground(new java.awt.Color(247, 212, 136));
        lblSubject.setText("Subject");

        jcbSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbSubjectActionPerformed(evt);
            }
        });

        pnlTable.setBackground(new java.awt.Color(26, 27, 65));

        pnlReIssue.setBackground(new java.awt.Color(26, 27, 65));
        pnlReIssue.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(247, 212, 136)), "DETAILS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(247, 212, 136))); // NOI18N
        pnlReIssue.setForeground(new java.awt.Color(240, 240, 240));

        ReDOI.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ReDOI.setForeground(new java.awt.Color(247, 212, 136));
        ReDOI.setText("DOI");

        ReDOR.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ReDOR.setForeground(new java.awt.Color(247, 212, 136));
        ReDOR.setText("DOR");

        ReDocumentName.setBackground(new java.awt.Color(255, 255, 255));
        ReDocumentName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ReDocumentName.setForeground(new java.awt.Color(247, 212, 136));
        ReDocumentName.setText("Document Name");

        jcbReDocName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CIAAN", "CT1", "CT2", "PST","MANUAL","ASSIGNMENT","TEACHER'S DAIRY","MENTOR BOOK","OTHER" }));

        javax.swing.GroupLayout pnlReIssueLayout = new javax.swing.GroupLayout(pnlReIssue);
        pnlReIssue.setLayout(pnlReIssueLayout);
        pnlReIssueLayout.setHorizontalGroup(
            pnlReIssueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReIssueLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlReIssueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ReDocumentName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ReDOI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ReDOR, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlReIssueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ReJdcDOI, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(ReJdcDOR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcbReDocName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlReIssueLayout.setVerticalGroup(
            pnlReIssueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReIssueLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlReIssueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlReIssueLayout.createSequentialGroup()
                        .addGroup(pnlReIssueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ReDocumentName)
                            .addComponent(jcbReDocName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ReJdcDOI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7))
                    .addComponent(ReDOI))
                .addGap(18, 18, 18)
                .addGroup(pnlReIssueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ReDOR)
                    .addComponent(ReJdcDOR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        pnlDocumentDetails.setBackground(new java.awt.Color(26, 27, 65));
        pnlDocumentDetails.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(247, 212, 136)), "DETAILS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(247, 212, 136))); // NOI18N
        pnlDocumentDetails.setForeground(new java.awt.Color(255, 255, 51));

        lblDocumentName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblDocumentName.setForeground(new java.awt.Color(247, 212, 136));
        lblDocumentName.setText("Document name");

        lblDOS.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblDOS.setForeground(new java.awt.Color(247, 212, 136));
        lblDOS.setText("DOS");

        lblComment.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblComment.setForeground(new java.awt.Color(247, 212, 136));
        lblComment.setText("Comment");

        jcbDocName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CIAAN", "CT1", "CT2", "PST","MANUAL","ASSIGNMENT","TEACHER'S DAIRY","MENTOR BOOK","OTHER" }));

        javax.swing.GroupLayout pnlDocumentDetailsLayout = new javax.swing.GroupLayout(pnlDocumentDetails);
        pnlDocumentDetails.setLayout(pnlDocumentDetailsLayout);
        pnlDocumentDetailsLayout.setHorizontalGroup(
            pnlDocumentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDocumentDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDocumentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDocumentDetailsLayout.createSequentialGroup()
                        .addGroup(pnlDocumentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlDocumentDetailsLayout.createSequentialGroup()
                                .addComponent(lblDocumentName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18))
                            .addGroup(pnlDocumentDetailsLayout.createSequentialGroup()
                                .addComponent(lblDOS, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(pnlDocumentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdcDOS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbDocName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(pnlDocumentDetailsLayout.createSequentialGroup()
                        .addComponent(lblComment, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtComment, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlDocumentDetailsLayout.setVerticalGroup(
            pnlDocumentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDocumentDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDocumentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDocumentName, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbDocName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(pnlDocumentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDOS, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdcDOS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(pnlDocumentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblComment)
                    .addComponent(txtComment))
                .addContainerGap())
        );

        lblTitle.setBackground(new java.awt.Color(26, 27, 65));
        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(247, 212, 136));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Document Details");
        lblTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(247, 212, 136)));
        lblTitle.setOpaque(true);

        btnReIssue.setBackground(new java.awt.Color(247, 212, 136));
        btnReIssue.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnReIssue.setForeground(new java.awt.Color(26, 27, 65));
        btnReIssue.setText("RE-ISSUE");
        btnReIssue.setBorder(null);
        btnReIssue.setContentAreaFilled(false);
        btnReIssue.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReIssue.setOpaque(true);
        btnReIssue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReIssueActionPerformed(evt);
            }
        });

        btnSubmit1.setBackground(new java.awt.Color(247, 212, 136));
        btnSubmit1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSubmit1.setForeground(new java.awt.Color(26, 27, 65));
        btnSubmit1.setText("SUBMIT");
        btnSubmit1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(247, 212, 136)));
        btnSubmit1.setContentAreaFilled(false);
        btnSubmit1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSubmit1.setOpaque(true);
        btnSubmit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmit1ActionPerformed(evt);
            }
        });

        jTabbedPane1.setBackground(new java.awt.Color(26, 27, 65));
        jTabbedPane1.setForeground(new java.awt.Color(26, 27, 65));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTableLayout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(btnSubmit1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnReIssue, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(131, 131, 131))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTableLayout.createSequentialGroup()
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlTableLayout.createSequentialGroup()
                        .addComponent(pnlDocumentDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(pnlReIssue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTableLayout.createSequentialGroup()
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDocumentDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlReIssue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReIssue, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSubmit1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCourse)
                            .addComponent(jcbCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jcbSem, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblSem)
                                .addGap(79, 79, 79)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jcbProf, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSubject)
                            .addComponent(jcbSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtpMain, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCourse)
                            .addComponent(lblSem)
                            .addComponent(jLabel1)
                            .addComponent(lblSubject))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcbCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbSem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(pnlTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jtpMain, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jcbCourseNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCourseNameActionPerformed
        cSelected=true;
        addProfessorInJCBProf();

    }//GEN-LAST:event_jcbCourseNameActionPerformed

    private void jcbSemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbSemActionPerformed
        semSelected=true;
        addProfessorInJCBProf();

    }//GEN-LAST:event_jcbSemActionPerformed

    private void jcbProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbProfActionPerformed

        profSelected=true;
        addSubjectInJCBSubject();

    }//GEN-LAST:event_jcbProfActionPerformed

    private void jcbSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbSubjectActionPerformed
        
        if(jcbSubject.getSelectedIndex()>=0){
            lblTitle.setText("Document Details of Professor : "+jcbProf.getSelectedItem()+" and Subject : " + jcbSubject.getSelectedItem());
            CustomJTable.insertInJtable(jtbDocuments,"document",professorDatabase.getProfId((String)jcbProf.getSelectedItem()),subjectDatabase.getSubjectID((String)jcbSubject.getSelectedItem()));
            CustomJTable.insertInJtable(jtblReIssue, "reissue",professorDatabase.getProfId((String)jcbProf.getSelectedItem()) , subjectDatabase.getSubjectID((String)jcbSubject.getSelectedItem()));
            System.out.println("prof : " + professorDatabase.getProfId((String)jcbProf.getSelectedItem()));
            System.out.println("sub : " + subjectDatabase.getSubjectID((String)jcbSubject.getSelectedItem()));
            btnSubmit1.setEnabled(true);
            btnReIssue.setEnabled(true);
        }
        else{
            lblTitle.setText("Document Details");
            CustomJTable.insertInJtable(jtbDocuments,"document");
            CustomJTable.insertInJtable(jtblReIssue,"reissue");
            btnSubmit1.setEnabled(false);
            btnReIssue.setEnabled(false);
        }
    }//GEN-LAST:event_jcbSubjectActionPerformed

    private void btnReIssueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReIssueActionPerformed
       if(checkFieldsReIssue()){
          System.out.println(jcbReDocName.getSelectedItem());
          String subId=subjectDatabase.getSubjectID((String)jcbSubject.getSelectedItem());
           if(documentDatabase.isSubmitted((String)jcbReDocName.getSelectedItem(),subId,professorDatabase.getProfId((String)jcbProf.getSelectedItem()))){
            if(canBeReIssued(professorDatabase.getProfId((String)jcbProf.getSelectedItem()),subId,(String)jcbDocName.getSelectedItem())){
                if(documentDatabase.insertInReIssue(professorDatabase.getProfId((String)jcbProf.getSelectedItem()),subId,(String)jcbDocName.getSelectedItem(),new java.sql.Date(ReJdcDOI.getDate().getTime()),new java.sql.Date(ReJdcDOR.getDate().getTime()))){
                    JOptionPane.showMessageDialog(null,"Document re-issuued Successfully", "dashboardpanel", JOptionPane.INFORMATION_MESSAGE);
                    CustomJTable.insertInJtable(jtblReIssue, "reissue",professorDatabase.getProfId((String)jcbProf.getSelectedItem()) , subjectDatabase.getSubjectID((String)jcbSubject.getSelectedItem()));
                }else    
                    JOptionPane.showMessageDialog(null,"Document cannot be re-issuued ", "dashboardpanel", JOptionPane.INFORMATION_MESSAGE);
            }else
                JOptionPane.showMessageDialog(null,"Submit the document first", "dashboardpanel", JOptionPane.ERROR_MESSAGE);
           }
           else 
               JOptionPane.showMessageDialog(null,"Submit the document first", "dashboardpanel", JOptionPane.ERROR_MESSAGE);
        }else
            JOptionPane.showMessageDialog(null,"Please fill all details", "dashboardpanel", JOptionPane.ERROR_MESSAGE);

    }//GEN-LAST:event_btnReIssueActionPerformed

    private void btnSubmit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmit1ActionPerformed
       if(checkFields()){
           String subId=subjectDatabase.getSubjectID((String)jcbSubject.getSelectedItem());
           if(canBeSubmitted(professorDatabase.getProfId((String)jcbProf.getSelectedItem()),subId,(String)jcbDocName.getSelectedItem())){

            
                documentDatabase.insert(professorDatabase.getProfId((String)jcbProf.getSelectedItem()),subId,(String)jcbDocName.getSelectedItem(),new java.sql.Date(jdcDOS.getDate().getTime()),txtComment.getText());
                JOptionPane.showMessageDialog(null,"Document Submitted Successfully", "dashboardpanel", JOptionPane.INFORMATION_MESSAGE);
                CustomJTable.insertInJtable(jtbDocuments,"document",professorDatabase.getProfId((String)jcbProf.getSelectedItem()),subjectDatabase.getSubjectID((String)jcbSubject.getSelectedItem()));
           }else
               JOptionPane.showMessageDialog(null,"Document is already submitted", "dashboardpanel", JOptionPane.ERROR_MESSAGE);
        }else
            JOptionPane.showMessageDialog(null,"Please fill all details", "dashboardpanel", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_btnSubmit1ActionPerformed
    private boolean checkFieldsReIssue(){
        if(ReJdcDOI.getDate()==null || ReJdcDOR.getDate()==null)
            return false;
        return true;
    
    }
    private boolean canBeSubmitted(int profId,String subId,String docName){
        int numOfReissued=documentDatabase.numOfReIssue(profId,subId,docName),numOfSubmitted=documentDatabase.numOfSubmitted(profId,subId,docName);
        if(numOfReissued==-1 || numOfSubmitted==-1)
            return false;
        if(numOfReissued>=numOfSubmitted)
            return true;
        return false;
    }
    private boolean canBeReIssued(int profId,String subId,String docName){
         int numOfReissued=documentDatabase.numOfReIssue(profId,subId,docName),numOfSubmitted=documentDatabase.numOfSubmitted(profId,subId,docName);
        if(numOfReissued==-1 || numOfSubmitted==-1)
            return false;
        if(numOfReissued<numOfSubmitted)
            return true;
        return false;
    }
    private boolean checkFields(){
        if(jdcDOS.getDate()==null)
            return false;
        return true;
            
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ReDOI;
    private javax.swing.JLabel ReDOR;
    private javax.swing.JLabel ReDocumentName;
    private com.toedter.calendar.JDateChooser ReJdcDOI;
    private com.toedter.calendar.JDateChooser ReJdcDOR;
    private javax.swing.JButton btnReIssue;
    private javax.swing.JButton btnSubmit1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> jcbCourseName;
    private javax.swing.JComboBox<String> jcbDocName;
    private javax.swing.JComboBox<String> jcbProf;
    private javax.swing.JComboBox<String> jcbReDocName;
    private javax.swing.JComboBox<String> jcbSem;
    private javax.swing.JComboBox<String> jcbSubject;
    private com.toedter.calendar.JDateChooser jdcDOS;
    private javax.swing.JTabbedPane jtpMain;
    private javax.swing.JLabel lblComment;
    private javax.swing.JLabel lblCourse;
    private javax.swing.JLabel lblDOS;
    private javax.swing.JLabel lblDocumentName;
    private javax.swing.JLabel lblSem;
    private javax.swing.JLabel lblSubject;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlDocumentDetails;
    private javax.swing.JPanel pnlReIssue;
    private javax.swing.JPanel pnlTable;
    private javax.swing.JTextField txtComment;
    // End of variables declaration//GEN-END:variables
    private boolean cSelected=false,semSelected=false,profSelected=false,constructor=false;
}
